<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.chun.springpt.dao.SignUpDao">
    <insert id="insertMembers" >
    insert into members (id, email, password, name, gender, role, birth, kakaocode)
    values (#{id}, #{email}, #{password}, #{name}, #{gender}, #{role}, to_date(#{birth},'YY/MM/DD') ,#{kakaocode})
    </insert>
    <insert id="insertNormal">
    insert into normal_mem (nnum, normal_id, weight, height, purpose, activity, nickname, target_weight, nm_profileimg, region)
    values (normal_mem_seq.nextval, #{id}, #{weight}, #{height}, #{purpose}, #{activity}, #{nickname}, #{target_weight}, normal_mem_seq.currval||'.png', #{region})
        <selectKey keyProperty="nnum" resultType="int" order="AFTER">
            select normal_mem_seq.currval from dual
        </selectKey>
    </insert>  
    <insert id ="insertMemFood">
        INSERT ALL
        <foreach collection="rating" item="ratingItem" index="index">
            INTO memberfood (rating, foodnum, nnum) VALUES (#{index}+1, #{ratingItem}, #{nnum})
        </foreach>
        SELECT * FROM dual
    </insert>
    <insert id="insertTrainer">
        <!-- 먼저 시퀀스 값을 가져옵니다 -->
        <selectKey keyProperty="tnum" resultType="int" order="BEFORE">
            SELECT trainer_mem_seq.nextval FROM dual
        </selectKey>

        <!-- 가져온 시퀀스 값을 사용하여 행을 삽입합니다 -->
        INSERT INTO trainer_mem (
        tnum, TRAINER_ID, trainercomment, trainerintro, region, awards1, awards2, awards3, awards4, awards5,
        starttime, endtime, mainimage, subimage1, subimage2, isverified, gym
        ) VALUES (
        #{tnum}, #{id}, #{trainercomment}, #{trainerintro}, #{region}, #{awards1}, #{awards2}, #{awards3}, #{awards4}, #{awards5},
        #{starttime}, #{endtime}, #{tnum}||'_0.png', #{tnum}||'_1.png', #{tnum}||'_2.png', 0, #{gym}
        )
    </insert>
    <select id="select_trainer_mem_seq" resultType="int">
        SELECT trainer_mem_seq.currval FROM dual
    </select>
    <select id="validCheckEmail" resultType="int">
        select count(*) from members where email = #{email} 
    </select>
    <select id="validCheckId" resultType="int">
        select count(*) from members where id = #{id}
    </select>
 </mapper>